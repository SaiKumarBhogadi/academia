# Generated by Django 4.2.20 on 2025-05-01 13:56

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdmissionCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=9)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Withdrawn', 'Withdrawn')], default='Pending', max_length=20)),
                ('apply_date', models.DateTimeField(auto_now_add=True)),
                ('admission_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('entrance_exam', models.CharField(blank=True, max_length=100)),
                ('entrance_score', models.CharField(blank=True, max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('nationality', models.CharField(default='Indian', max_length=50)),
                ('aadhaar_number', models.CharField(blank=True, max_length=12)),
                ('contact_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('permanent_address', models.TextField()),
                ('correspondence_address', models.TextField(blank=True)),
                ('caste', models.CharField(blank=True, max_length=50)),
                ('religion', models.CharField(blank=True, max_length=50)),
                ('mother_tongue', models.CharField(blank=True, max_length=50)),
                ('father_name', models.CharField(max_length=100)),
                ('father_occupation', models.CharField(blank=True, max_length=100)),
                ('father_contact', models.CharField(blank=True, max_length=15)),
                ('mother_name', models.CharField(max_length=100)),
                ('mother_occupation', models.CharField(blank=True, max_length=100)),
                ('mother_contact', models.CharField(blank=True, max_length=15)),
                ('family_income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('class_12_school', models.CharField(max_length=200)),
                ('class_12_address', models.TextField()),
                ('class_12_board', models.CharField(choices=[('CBSE', 'CBSE'), ('ICSE', 'ICSE'), ('State', 'State Board'), ('IB', 'IB'), ('Other', 'Other')], max_length=50)),
                ('class_12_year', models.CharField(max_length=4)),
                ('class_12_percentage', models.CharField(max_length=10)),
                ('class_12_stream', models.CharField(max_length=50)),
                ('class_10_school', models.CharField(max_length=200)),
                ('class_10_board', models.CharField(choices=[('CBSE', 'CBSE'), ('ICSE', 'ICSE'), ('State', 'State Board'), ('IB', 'IB'), ('Other', 'Other')], max_length=50)),
                ('class_10_year', models.CharField(max_length=4)),
                ('class_10_percentage', models.CharField(max_length=10)),
                ('other_qualifications', models.TextField(blank=True)),
                ('achievements', models.TextField(blank=True)),
                ('birth_certificate', models.FileField(upload_to='applications/documents/%Y/%m/%d/')),
                ('aadhaar_card', models.FileField(blank=True, upload_to='applications/documents/%Y/%m/%d/')),
                ('caste_certificate', models.FileField(blank=True, upload_to='applications/documents/%Y/%m/%d/')),
                ('class_12_mark_sheet', models.FileField(upload_to='applications/documents/%Y/%m/%d/')),
                ('class_10_mark_sheet', models.FileField(upload_to='applications/documents/%Y/%m/%d/')),
                ('transfer_certificate', models.FileField(upload_to='applications/documents/%Y/%m/%d/')),
                ('passport_photo', models.FileField(upload_to='applications/documents/%Y/%m/%d/')),
                ('address_proof', models.FileField(upload_to='applications/documents/%Y/%m/%d/')),
                ('entrance_scorecard', models.FileField(blank=True, upload_to='applications/documents/%Y/%m/%d/')),
                ('recommendation_letter', models.FileField(blank=True, upload_to='applications/documents/%Y/%m/%d/')),
            ],
            options={
                'verbose_name': 'College Application',
                'verbose_name_plural': 'College Applications',
            },
        ),
        migrations.CreateModel(
            name='CollegeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_name', models.CharField(max_length=255)),
                ('principal_name', models.CharField(max_length=100)),
                ('contact_phone', models.CharField(max_length=15)),
                ('alternate_phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('college_type', models.CharField(choices=[('Private', 'Private'), ('Government', 'Government'), ('Autonomous', 'Autonomous')], max_length=50)),
                ('affiliation', models.CharField(max_length=100)),
                ('accreditation', models.CharField(choices=[('AICTE', 'AICTE'), ('NAAC', 'NAAC'), ('NBA', 'NBA'), ('Other', 'Other')], max_length=100)),
                ('courses_offered', models.TextField(blank=True, null=True)),
                ('streams_available', models.TextField(blank=True, null=True)),
                ('medium_of_instruction', models.CharField(blank=True, choices=[('English', 'English'), ('Telugu', 'Telugu'), ('Hindi', 'Hindi'), ('Other', 'Other')], max_length=50, null=True)),
                ('established_year', models.IntegerField()),
                ('total_students', models.IntegerField()),
                ('total_faculty', models.IntegerField()),
                ('college_code', models.CharField(blank=True, max_length=50, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('hostel_availability', models.BooleanField(default=False)),
                ('hostel_capacity_boys', models.IntegerField(blank=True, null=True)),
                ('hostel_capacity_girls', models.IntegerField(blank=True, null=True)),
                ('library', models.BooleanField(default=False)),
                ('library_books_count', models.IntegerField(blank=True, null=True)),
                ('labs', models.TextField(blank=True, null=True)),
                ('placement_cell', models.BooleanField(default=False)),
                ('placement_percentage', models.FloatField(blank=True, null=True)),
                ('top_recruiters', models.TextField(blank=True, null=True)),
                ('other_facilities', models.TextField(blank=True, null=True)),
                ('street_address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='college_logos/')),
                ('accreditation_certificate', models.FileField(blank=True, null=True, upload_to='college_certificates/')),
                ('brochure', models.FileField(blank=True, null=True, upload_to='college_brochures/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=50)),
                ('eligibility_criteria', models.TextField(blank=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='degrees', to='colleges.collegeprofile')),
                ('cycle', models.ForeignKey(help_text='The cycle this degree is offered in', on_delete=django.db.models.deletion.CASCADE, to='colleges.admissioncycle')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hod_name', models.CharField(blank=True, max_length=100)),
                ('faculty_count', models.PositiveIntegerField(default=0)),
                ('labs', models.TextField(blank=True)),
                ('fees_per_year', models.DecimalField(decimal_places=2, max_digits=10)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='colleges.collegeprofile')),
                ('cycle', models.ForeignKey(help_text='The cycle this department is offered in', on_delete=django.db.models.deletion.CASCADE, to='colleges.admissioncycle')),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='colleges.degree')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=50)),
                ('total_seats', models.PositiveIntegerField(default=0)),
                ('cycle', models.ForeignKey(help_text='The cycle this section is offered in', on_delete=django.db.models.deletion.CASCADE, to='colleges.admissioncycle')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='colleges.department')),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.CharField(blank=True, max_length=10)),
                ('is_filled', models.BooleanField(default=False)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='colleges.section')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('semester', models.CharField(max_length=20)),
                ('credits', models.PositiveIntegerField()),
                ('cycle', models.ForeignKey(help_text='The cycle this course is offered in', on_delete=django.db.models.deletion.CASCADE, to='colleges.admissioncycle')),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='colleges.degree')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='colleges.department')),
            ],
        ),
    ]
